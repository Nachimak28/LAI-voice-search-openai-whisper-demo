# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*install-app*

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg

*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Sphinx documentation
docs/_build/
docs/source-app/api/
docs/source-app/*.md

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.local_env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# PyCharm
.idea/

# Lightning logs
lightning_logs
*.gz
.DS_Store
.*_submit.py
.vscode

MNIST
*.pt
.storage/
.shared/
infra
data
coverage.*
# Frontend build artifacts
*lightning_app/ui*
gradio_cached_examples
/docs/source-app/api_reference/generated/*
examples/my_own_leaderboard/submissions/*
docs/source-app/api_reference/generated/*
*.ckpt
redis-stable
node_modules
*.rdb
*.webm
*hars
examples/quick_start/*
examples/quick_start
examples/template_react_ui/*
examples/template_react_ui
# Ignore external components
lightning_app/components/*
!lightning_app/components/python
!lightning_app/components/serve
!lightning_app/components/__init__.py
!lightning_app/components/README.md
train_script.py
*return_values*
scratch
storage
